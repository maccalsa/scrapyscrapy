plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.1'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'org.hibernate.orm' version '6.6.4.Final'
  id 'org.graalvm.buildtools.native' version '0.10.4'
  id 'org.asciidoctor.jvm.convert' version '3.3.2'
  id 'io.spring.javaformat' version '0.0.41'
  id 'eclipse'
  id 'idea'
}

group = 'com.scrapyscrapy'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
  set('snippetsDir', file("build/generated-snippets"))
  set('springModulithVersion', "1.3.1")
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    
    // Database
    implementation 'org.postgresql:r2dbc-postgresql'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.postgresql:postgresql'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    
    // API Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'
    
    // Logging
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    
    // Development Tools
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // Add Jackson explicitly to resolve GraalVM metadata issue
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'

    // Spring Modulith
    implementation 'org.springframework.modulith:spring-modulith-core:1.3.1'
    implementation 'org.springframework.modulith:spring-modulith-docs:1.3.1'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:r2dbc'
    testImplementation 'org.springframework.modulith:spring-modulith-test:1.3.1'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Add Spring Boot Configuration Processor for better IDE support
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Add xml support
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.3'

    // Add dotenv-java
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    // Add Spring Boot Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Add JDBC driver for Flyway
    implementation 'org.postgresql:postgresql'
    
    // Update Flyway version to support PostgreSQL 16
    implementation 'org.flywaydb:flyway-core:10.7.1'
    implementation 'org.flywaydb:flyway-database-postgresql:10.7.1'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
  }
}

hibernate {
  enhancement {
    enableAssociationManagement = true
  }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
  inputs.dir snippetsDir
  dependsOn test
}

tasks.named('check').configure {
  dependsOn 'format'
}

tasks.matching { it.name.contains('FormatAot') }.configureEach {
  enabled = false
}

// Enable annotation processing
tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

tasks.named('compileJava') {
    dependsOn 'formatMain'
}

tasks.named('compileTestJava') {
    dependsOn 'formatTest'
}

tasks.named('checkFormatMain') {
    dependsOn 'formatMain'
}

tasks.named('checkFormatTest') {
    dependsOn 'formatTest'
}

tasks.named('compileAotJava') {
    dependsOn 'formatAot'
}

tasks.named('checkFormatAot') {
    dependsOn 'formatAot'
}

tasks.named('compileAotTestJava') {
    dependsOn 'formatAotTest'
}

tasks.named('checkFormatAotTest') {
    dependsOn 'formatAotTest'
}
